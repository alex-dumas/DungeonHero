{"ts":1373384774688,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1373384977611,"patch":[[{"diffs":[[1,"ig.module(\n  'plugins.fog'\n)\n.requires(\n  'impact.impact'\n)\n.defines(function() {\n \nig.Fog = ig.Class.extend({\n \n  // The fog color, defaults to black\n  fillStyle: 'rgba(0, 0, 0, 1)',\n \n  init: function (mapWidth, mapHeight, tileSize) {\n    this.mapWidth = mapWidth;\n    this.mapHeight = mapHeight;\n    this.tileSize = tileSize;\n  },\n \n  draw: function (viewedTileCallback) {\n    var fogColumns = [];\n    var column = null;\n \n    // Iterate through each tile in our grid\n    // One column at a time, from left to right\n    for (var x = 0; x < this.mapWidth; x++) {\n      for (var y = 0; y < this.mapHeight; y++) {\n        if (!column) {\n          column = { x: x, y: y, tiles: 0 };\n        }\n \n        if (viewedTileCallback(x, y)) {\n          // We've run into a viewed tile\n          // Snip this fog column and store it in our buffer\n          if (column.tiles > 0) {\n            fogColumns.push(column);\n          }\n          column = null;\n        } else if ((y + 1) === this.mapHeight) {\n          // We've reached the end of the column\n          // Store it and start a new one\n          column.tiles++;\n          fogColumns.push(column);\n          column = null;\n        } else {\n          // The fog column grows\n          column.tiles++;\n        }\n      }\n    }\n \n    for (var i = 0; i < fogColumns.length; i++) {\n      var col = fogColumns[i];\n      this._drawColumn(col.x, col.y, col.tiles);\n    }\n  },\n \n  // Draws a vertical strip of fog using the 2D Canvas API\n  _drawColumn: function (x, y, tiles) {\n    ig.system.context.fillStyle = this.fillStyle;\n    ig.system.context.fillRect(this._realSize(x), this._realSize(y), this._realSize(1), this._realSize(tiles));\n  },\n \n  // Converts a location in our tile grid to the actual location in the game canvas\n  _realSize: function (number) {\n    return number * this.tileSize * ig.system.scale;\n  }\n \n});\n \n});"]],"start1":0,"start2":0,"length1":0,"length2":1870}]],"length":1870,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373754124418,"patch":[[{"diffs":[[0,".module("],[-1,"\n  "],[0,"'plugins"]],"start1":2,"start2":2,"length1":19,"length2":16},{"diffs":[[0,"ins.fog'"],[-1,"\n)\n"],[1,")"],[0,".require"]],"start1":15,"start2":15,"length1":19,"length2":17},{"diffs":[[0,"equires("],[-1,"\n  "],[0,"'impact."]],"start1":26,"start2":26,"length1":19,"length2":16},{"diffs":[[0,"act'"],[-1,"\n)\n"],[1,")"],[0,".def"]],"start1":45,"start2":45,"length1":11,"length2":9},{"diffs":[[0,"ion() {\n"],[-1," "],[0,"\n"],[1,"    "],[0,"ig.Fog ="]],"start1":64,"start2":64,"length1":18,"length2":21},{"diffs":[[0,"xtend({\n"],[-1," "],[0,"\n"],[1,"      "],[0,"  // The"]],"start1":96,"start2":96,"length1":18,"length2":23},{"diffs":[[0,"o black\n"],[1,"      "],[0,"  fillSt"]],"start1":141,"start2":141,"length1":16,"length2":22},{"diffs":[[0,"0, 1)',\n"],[-1," "],[0,"\n"],[1,"      "],[0,"  init: "]],"start1":180,"start2":180,"length1":18,"length2":23},{"diffs":[[0,"function"],[-1," "],[0,"(mapWidt"]],"start1":203,"start2":203,"length1":17,"length2":16},{"diffs":[[0,"tileSize) {\n"],[1,"        "],[0,"    this.map"]],"start1":233,"start2":233,"length1":24,"length2":32},{"diffs":[[0,"pWidth;\n"],[1,"        "],[0,"    this"]],"start1":275,"start2":275,"length1":16,"length2":24},{"diffs":[[0,"Height;\n"],[1,"        "],[0,"    this"]],"start1":315,"start2":315,"length1":16,"length2":24},{"diffs":[[0,"Size;\n  "],[-1,"},\n \n"],[1,"      },\n\n      "],[0,"  draw: "]],"start1":355,"start2":355,"length1":21,"length2":32},{"diffs":[[0,"function"],[-1," "],[0,"(viewedT"]],"start1":387,"start2":387,"length1":17,"length2":16},{"diffs":[[0,"Callback) {\n"],[1,"        "],[0,"    var fogC"]],"start1":406,"start2":406,"length1":24,"length2":32},{"diffs":[[0,"s = [];\n"],[1,"        "],[0,"    var "]],"start1":443,"start2":443,"length1":16,"length2":24},{"diffs":[[0,"= null;\n"],[-1," "],[0,"\n"],[1,"        "],[0,"    // I"]],"start1":474,"start2":474,"length1":18,"length2":25},{"diffs":[[0,"ur grid\n"],[1,"        "],[0,"    // O"]],"start1":528,"start2":528,"length1":16,"length2":24},{"diffs":[[0,"o right\n"],[1,"        "],[0,"    for "]],"start1":584,"start2":584,"length1":16,"length2":24},{"diffs":[[0,"dth; x++) {\n"],[1,"          "],[0,"      for (v"]],"start1":634,"start2":634,"length1":24,"length2":34},{"diffs":[[0,"ght; y++) {\n"],[1,"            "],[0,"        if ("]],"start1":693,"start2":693,"length1":24,"length2":36},{"diffs":[[0,"    "],[-1,"column = { x: x, y: y, tiles: 0 };\n        }\n \n"],[1,"              column = {\n                            x: x,\n                            y: y,\n                            tiles: 0\n                        };\n                    }\n\n            "],[0,"    "]],"start1":746,"start2":746,"length1":55,"length2":200},{"diffs":[[0,"ck(x, y)) {\n"],[1,"              "],[0,"          //"]],"start1":970,"start2":970,"length1":24,"length2":38},{"diffs":[[0,"ed tile\n"],[1,"              "],[0,"        "]],"start1":1030,"start2":1030,"length1":16,"length2":30},{"diffs":[[0,"r\n          "],[1,"              "],[0,"if (column.t"]],"start1":1111,"start2":1111,"length1":24,"length2":38},{"diffs":[[0,"iles > 0) {\n"],[1,"                "],[0,"            "]],"start1":1149,"start2":1149,"length1":24,"length2":40},{"diffs":[[0,";\n          "],[-1,"}\n"],[1,"              }\n              "],[0,"          co"]],"start1":1212,"start2":1212,"length1":26,"length2":54},{"diffs":[[0,"ll;\n        "],[-1,"}"],[1,"            }\n                   "],[0," else if ((y"]],"start1":1275,"start2":1275,"length1":25,"length2":57},{"diffs":[[0,"apHeight) {\n"],[1,"              "],[0,"          //"]],"start1":1348,"start2":1348,"length1":24,"length2":38},{"diffs":[[0,"n\n          "],[1,"              "],[0,"// Store it "]],"start1":1421,"start2":1421,"length1":24,"length2":38},{"diffs":[[0,"new one\n"],[1,"              "],[0,"        "]],"start1":1471,"start2":1471,"length1":16,"length2":30},{"diffs":[[0,"column.tiles++;\n"],[1,"              "],[0,"          fogCol"]],"start1":1503,"start2":1503,"length1":32,"length2":46},{"diffs":[[0,"umn);\n          "],[1,"              "],[0,"column = null;\n "]],"start1":1562,"start2":1562,"length1":32,"length2":46},{"diffs":[[0,"    "],[-1,"} else {\n"],[1,"            }\n                    else {\n              "],[0,"    "]],"start1":1611,"start2":1611,"length1":17,"length2":63},{"diffs":[[0,"n grows\n"],[1,"              "],[0,"        "]],"start1":1696,"start2":1696,"length1":16,"length2":30},{"diffs":[[0,"    "],[-1,"}\n"],[1,"            }\n     "],[0,"      "],[1,"     "],[0,"}\n    "],[-1,"}\n \n"],[1,"        }\n\n       "],[0,"    "],[1," "],[0,"for "]],"start1":1748,"start2":1748,"length1":30,"length2":67},{"diffs":[[0,"gth; i++) {\n"],[1,"          "],[0,"      var co"]],"start1":1845,"start2":1845,"length1":24,"length2":34},{"diffs":[[0,"mns[i];\n"],[1,"          "],[0,"      th"]],"start1":1890,"start2":1890,"length1":16,"length2":26},{"diffs":[[0,"    "],[-1,"}\n  },\n \n"],[1,"        }\n        },\n\n      "],[0,"  //"]],"start1":1957,"start2":1957,"length1":17,"length2":36},{"diffs":[[0,"vas API\n"],[1,"      "],[0,"  _drawC"]],"start1":2040,"start2":2040,"length1":16,"length2":22},{"diffs":[[0,"function"],[-1," "],[0,"(x, y, t"]],"start1":2069,"start2":2069,"length1":17,"length2":16},{"diffs":[[0,"y, tiles) {\n"],[1,"        "],[0,"    ig.syste"]],"start1":2081,"start2":2081,"length1":24,"length2":32},{"diffs":[[0,"lStyle;\n"],[1,"        "],[0,"    ig.s"]],"start1":2143,"start2":2143,"length1":16,"length2":24},{"diffs":[[0,"));\n"],[1,"      "],[0,"  },\n"],[-1," \n"],[1,"\n      "],[0,"  //"]],"start1":2267,"start2":2267,"length1":15,"length2":26},{"diffs":[[0," canvas\n"],[1,"      "],[0,"  _realS"]],"start1":2365,"start2":2365,"length1":16,"length2":22},{"diffs":[[0,"function"],[-1," "],[0,"(number)"]],"start1":2392,"start2":2392,"length1":17,"length2":16},{"diffs":[[0,"n(number) {\n"],[1,"        "],[0,"    return n"]],"start1":2399,"start2":2399,"length1":24,"length2":32},{"diffs":[[0,";\n  "],[-1,"}\n \n"],[1,"      }\n\n    "],[0,"});\n"],[-1," "],[0,"\n});"]],"start1":2470,"start2":2470,"length1":17,"length2":25}]],"length":2495,"saved":false}
